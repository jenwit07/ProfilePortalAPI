---
swagger: "2.0"
info:
  description: "Simple service for handling user authentication and basic role-based\
    \ access control."
  version: "1.0.0"
  title: "Auth Service"
basePath: "/api/auth"
schemes:
- "http"
paths:
  /login:
    post:
      summary: "User Login"
      description: "Authenticate user and return a token."
      operationId: "loginPOST"
      parameters:
      - in: "body"
        name: "credentials"
        description: "User login credentials"
        required: true
        schema:
          $ref: "#/definitions/Credentials"
      responses:
        "200":
          description: "Login successful, token returned."
          schema:
            $ref: "#/definitions/TokenResponse"
        "401":
          description: "Unauthorized, invalid credentials."
      x-swagger-router-controller: "Default"
  /verify:
    get:
      summary: "Verify Token and Get Roles"
      description: "Verify the token and return the roles of the authenticated user."
      operationId: "verifyGET"
      parameters: []
      security:
      - BearerAuth: []
      responses:
        "200":
          description: "Token is valid, user roles returned."
          schema:
            $ref: "#/definitions/UserRoles"
        "401":
          description: "Unauthorized, token invalid or missing."
      x-swagger-router-controller: "Default"
securityDefinitions:
  BearerAuth:
    type: "apiKey"
    name: "Authorization"
    in: "header"
definitions:
  Credentials:
    type: "object"
    required:
    - "password"
    - "username"
    properties:
      username:
        type: "string"
      password:
        type: "string"
  TokenResponse:
    type: "object"
    properties:
      token:
        type: "string"
    example:
      token: "token"
  UserRoles:
    type: "object"
    properties:
      roles:
        type: "array"
        items:
          type: "string"
    example:
      roles:
      - "roles"
      - "roles"
