{"version":3,"file":"CommentsService.js","names":["getCommentsService","_x","_getCommentsService","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee","appointmentId","comments","wrap","_callee$","_context","prev","next","appointmentDb","findAll","where","appointment_id","order","sent","abrupt","t0","stop","addCommentService","_x2","_x3","_addCommentService","_callee2","commentData","appointment","newComment","_callee2$","_context2","appointments","findOne","id","Error","create","updateCommentService","_x4","_x5","_updateCommentService","_callee3","commentId","result","_callee3$","_context3","update","message","deleteCommentService","_x6","_deleteCommentService","_callee4","_callee4$","_context4","destroy"],"sources":["../../../src/app/service/CommentsService.js"],"sourcesContent":["export async function getCommentsService(appointmentId) {\n  try {\n    const comments = await appointmentDb.comments.findAll({\n      where: { appointment_id: appointmentId },\n      order: [['create_datetime', 'ASC']],\n    });\n    return comments;\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport async function addCommentService(appointmentId, commentData) {\n  try {\n    const appointment = await appointmentDb.appointments.findOne({\n      where: { id: appointmentId },\n    } );\n    if ( !appointment ) {\n      throw new Error('Appointment not found');\n    }\n\n    commentData.appointment_id = appointmentId;\n    const newComment = await appointmentDb.comments.create(commentData);\n    return newComment;\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport async function updateCommentService(commentId, commentData) {\n  try {\n    const result = await appointmentDb.comments.update(commentData, {\n      where: { id: commentId },\n    });\n    if ( result[0] === 0 ) {\n      return result;\n    } else {\n      return { message: 'Comment updated successfully' };\n    }\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport async function deleteCommentService(commentId) {\n  try {\n    const result = await appointmentDb.comments.destroy({\n      where: { id: commentId },\n    });\n    if ( result === 0 ) {\n      return result;\n    } else {\n      return { message: 'Comment deleted successfully' };\n    }\n  } catch (e) {\n    throw e;\n  }\n}\n"],"mappings":"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"}