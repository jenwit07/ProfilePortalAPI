{"version":3,"file":"AuthService.js","names":["_bcryptjs","_interopRequireDefault","require","_jsonwebtoken","JWT_SECRET","process","env","loginService","_x","_loginService","apply","arguments","_asyncToGenerator2","_regenerator","mark","_callee","credentials","user","roles","role","token","wrap","_callee$","_context","prev","next","authDb","users","findOne","where","username","sent","t0","bcrypt","compare","password","Error","user_roles","user_id","id","role_id","jwt","sign","userId","role_name","expiresIn","abrupt","t1","stop","verifyTokenService","_x2","_verifyTokenService","_callee2","decoded","_callee2$","_context2","verify","registerUserService","_x3","_registerUserService","_callee3","registrationData","hashedPassword","newUser","_callee3$","_context3","hash","create"],"sources":["../../../src/app/service/AuthService.js"],"sourcesContent":["import bcrypt from 'bcryptjs';\nimport jwt from 'jsonwebtoken';\nconst JWT_SECRET = process.env.JWT_SECRET;\n\nexport async function loginService(credentials) {\n  try {\n    const user = await authDb.users.findOne( { where: { username: credentials.username } } );\n    \n    if (!user || !await bcrypt.compare(credentials.password, user.password)) {\n      throw new Error('Invalid username or password');\n    }\n\n    const roles = await authDb.user_roles.findOne( { where: { user_id: user.id } } );\n    const role = await authDb.roles.findOne( { where: { id: roles.role_id } } );\n\n    const token = jwt.sign({ userId: user.id, username: user.username, role: role.role_name }, JWT_SECRET, { expiresIn: '1h' });\n    return { token };\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport async function verifyTokenService(token) {\n  try {\n    //verify token and return user roles\n    const decoded = jwt.verify( token, JWT_SECRET );\n    // console.log( decoded );\n    return decoded;\n  } catch (e) {\n    throw e;\n  }\n}\n\nexport async function registerUserService(registrationData) {\n  try {\n    const hashedPassword = await bcrypt.hash(registrationData.password, 10);\n    const role = await authDb.roles.findOne({ where: { role_name: registrationData.role } });\n    if (!role) {\n      throw new Error('Invalid role');\n    }\n\n    // check duplicate username\n    const user = await authDb.users.findOne( { where: { username: registrationData.username } } );\n    if (user) {\n      throw new Error('Username already exists');\n    }\n\n    const newUser = await authDb.users.create({\n      username: registrationData.username,\n      password: hashedPassword\n    });\n\n    await authDb.user_roles.create({\n      user_id: newUser.id,\n      role_id: role.id\n    });\n\n    return newUser;\n  } catch (e) {\n    throw e;\n  }\n}\n\n"],"mappings":";;;;;;;;;;;AAAA,IAAAA,SAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAME,UAAU,GAAGC,OAAO,CAACC,GAAG,CAACF,UAAU;AAAC,SAEpBG,YAAYA,CAAAC,EAAA;EAAA,OAAAC,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAF,cAAA;EAAAA,aAAA,OAAAG,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAA3B,SAAAC,QAA4BC,WAAW;IAAA,IAAAC,IAAA,EAAAC,KAAA,EAAAC,IAAA,EAAAC,KAAA;IAAA,OAAAP,YAAA,YAAAQ,IAAA,UAAAC,SAAAC,QAAA;MAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;QAAA;UAAAF,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAE,IAAA;UAAA,OAEvBC,MAAM,CAACC,KAAK,CAACC,OAAO,CAAE;YAAEC,KAAK,EAAE;cAAEC,QAAQ,EAAEd,WAAW,CAACc;YAAS;UAAE,CAAE,CAAC;QAAA;UAAlFb,IAAI,GAAAM,QAAA,CAAAQ,IAAA;UAAAR,QAAA,CAAAS,EAAA,GAEN,CAACf,IAAI;UAAA,IAAAM,QAAA,CAAAS,EAAA;YAAAT,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAAF,QAAA,CAAAE,IAAA;UAAA,OAAWQ,oBAAM,CAACC,OAAO,CAAClB,WAAW,CAACmB,QAAQ,EAAElB,IAAI,CAACkB,QAAQ,CAAC;QAAA;UAAAZ,QAAA,CAAAS,EAAA,IAAAT,QAAA,CAAAQ,IAAA;QAAA;UAAA,KAAAR,QAAA,CAAAS,EAAA;YAAAT,QAAA,CAAAE,IAAA;YAAA;UAAA;UAAA,MAC/D,IAAIW,KAAK,CAAC,8BAA8B,CAAC;QAAA;UAAAb,QAAA,CAAAE,IAAA;UAAA,OAG7BC,MAAM,CAACW,UAAU,CAACT,OAAO,CAAE;YAAEC,KAAK,EAAE;cAAES,OAAO,EAAErB,IAAI,CAACsB;YAAG;UAAE,CAAE,CAAC;QAAA;UAA1ErB,KAAK,GAAAK,QAAA,CAAAQ,IAAA;UAAAR,QAAA,CAAAE,IAAA;UAAA,OACQC,MAAM,CAACR,KAAK,CAACU,OAAO,CAAE;YAAEC,KAAK,EAAE;cAAEU,EAAE,EAAErB,KAAK,CAACsB;YAAQ;UAAE,CAAE,CAAC;QAAA;UAArErB,IAAI,GAAAI,QAAA,CAAAQ,IAAA;UAEJX,KAAK,GAAGqB,wBAAG,CAACC,IAAI,CAAC;YAAEC,MAAM,EAAE1B,IAAI,CAACsB,EAAE;YAAET,QAAQ,EAAEb,IAAI,CAACa,QAAQ;YAAEX,IAAI,EAAEA,IAAI,CAACyB;UAAU,CAAC,EAAExC,UAAU,EAAE;YAAEyC,SAAS,EAAE;UAAK,CAAC,CAAC;UAAA,OAAAtB,QAAA,CAAAuB,MAAA,WACpH;YAAE1B,KAAK,EAALA;UAAM,CAAC;QAAA;UAAAG,QAAA,CAAAC,IAAA;UAAAD,QAAA,CAAAwB,EAAA,GAAAxB,QAAA;UAAA,MAAAA,QAAA,CAAAwB,EAAA;QAAA;QAAA;UAAA,OAAAxB,QAAA,CAAAyB,IAAA;MAAA;IAAA,GAAAjC,OAAA;EAAA,CAInB;EAAA,OAAAN,aAAA,CAAAC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEqBsC,kBAAkBA,CAAAC,GAAA;EAAA,OAAAC,mBAAA,CAAAzC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAwC,oBAAA;EAAAA,mBAAA,OAAAvC,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAjC,SAAAsC,SAAkChC,KAAK;IAAA,IAAAiC,OAAA;IAAA,OAAAxC,YAAA,YAAAQ,IAAA,UAAAiC,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAA/B,IAAA,GAAA+B,SAAA,CAAA9B,IAAA;QAAA;UAAA8B,SAAA,CAAA/B,IAAA;UAE1C;UACM6B,OAAO,GAAGZ,wBAAG,CAACe,MAAM,CAAEpC,KAAK,EAAEhB,UAAW,CAAC,EAC/C;UAAA,OAAAmD,SAAA,CAAAT,MAAA,WACOO,OAAO;QAAA;UAAAE,SAAA,CAAA/B,IAAA;UAAA+B,SAAA,CAAAvB,EAAA,GAAAuB,SAAA;UAAA,MAAAA,SAAA,CAAAvB,EAAA;QAAA;QAAA;UAAA,OAAAuB,SAAA,CAAAP,IAAA;MAAA;IAAA,GAAAI,QAAA;EAAA,CAIjB;EAAA,OAAAD,mBAAA,CAAAzC,KAAA,OAAAC,SAAA;AAAA;AAAA,SAEqB8C,mBAAmBA,CAAAC,GAAA;EAAA,OAAAC,oBAAA,CAAAjD,KAAA,OAAAC,SAAA;AAAA;AAAA,SAAAgD,qBAAA;EAAAA,oBAAA,OAAA/C,kBAAA,2BAAAC,YAAA,YAAAC,IAAA,CAAlC,SAAA8C,SAAmCC,gBAAgB;IAAA,IAAAC,cAAA,EAAA3C,IAAA,EAAAF,IAAA,EAAA8C,OAAA;IAAA,OAAAlD,YAAA,YAAAQ,IAAA,UAAA2C,UAAAC,SAAA;MAAA,kBAAAA,SAAA,CAAAzC,IAAA,GAAAyC,SAAA,CAAAxC,IAAA;QAAA;UAAAwC,SAAA,CAAAzC,IAAA;UAAAyC,SAAA,CAAAxC,IAAA;UAAA,OAEzBQ,oBAAM,CAACiC,IAAI,CAACL,gBAAgB,CAAC1B,QAAQ,EAAE,EAAE,CAAC;QAAA;UAAjE2B,cAAc,GAAAG,SAAA,CAAAlC,IAAA;UAAAkC,SAAA,CAAAxC,IAAA;UAAA,OACDC,MAAM,CAACR,KAAK,CAACU,OAAO,CAAC;YAAEC,KAAK,EAAE;cAAEe,SAAS,EAAEiB,gBAAgB,CAAC1C;YAAK;UAAE,CAAC,CAAC;QAAA;UAAlFA,IAAI,GAAA8C,SAAA,CAAAlC,IAAA;UAAA,IACLZ,IAAI;YAAA8C,SAAA,CAAAxC,IAAA;YAAA;UAAA;UAAA,MACD,IAAIW,KAAK,CAAC,cAAc,CAAC;QAAA;UAAA6B,SAAA,CAAAxC,IAAA;UAAA,OAIdC,MAAM,CAACC,KAAK,CAACC,OAAO,CAAE;YAAEC,KAAK,EAAE;cAAEC,QAAQ,EAAE+B,gBAAgB,CAAC/B;YAAS;UAAE,CAAE,CAAC;QAAA;UAAvFb,IAAI,GAAAgD,SAAA,CAAAlC,IAAA;UAAA,KACNd,IAAI;YAAAgD,SAAA,CAAAxC,IAAA;YAAA;UAAA;UAAA,MACA,IAAIW,KAAK,CAAC,yBAAyB,CAAC;QAAA;UAAA6B,SAAA,CAAAxC,IAAA;UAAA,OAGtBC,MAAM,CAACC,KAAK,CAACwC,MAAM,CAAC;YACxCrC,QAAQ,EAAE+B,gBAAgB,CAAC/B,QAAQ;YACnCK,QAAQ,EAAE2B;UACZ,CAAC,CAAC;QAAA;UAHIC,OAAO,GAAAE,SAAA,CAAAlC,IAAA;UAAAkC,SAAA,CAAAxC,IAAA;UAAA,OAKPC,MAAM,CAACW,UAAU,CAAC8B,MAAM,CAAC;YAC7B7B,OAAO,EAAEyB,OAAO,CAACxB,EAAE;YACnBC,OAAO,EAAErB,IAAI,CAACoB;UAChB,CAAC,CAAC;QAAA;UAAA,OAAA0B,SAAA,CAAAnB,MAAA,WAEKiB,OAAO;QAAA;UAAAE,SAAA,CAAAzC,IAAA;UAAAyC,SAAA,CAAAjC,EAAA,GAAAiC,SAAA;UAAA,MAAAA,SAAA,CAAAjC,EAAA;QAAA;QAAA;UAAA,OAAAiC,SAAA,CAAAjB,IAAA;MAAA;IAAA,GAAAY,QAAA;EAAA,CAIjB;EAAA,OAAAD,oBAAA,CAAAjD,KAAA,OAAAC,SAAA;AAAA"}