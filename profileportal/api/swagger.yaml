swagger: '2.0'
info:
  version: '1.0.0'
  title: 'Profile Portal API'
  description: 'API for managing recruitment appointments.'
basePath: '/api'
schemes:
  - 'http'

securityDefinitions:
  BearerAuth:
    type: 'apiKey'
    name: 'Authorization'
    in: 'header'

tags:
  - name: 'Appointments'
  - name: 'Comments'
  - name: 'Update History'

paths:
  /v1/appointments:
    get:
      tags: [ 'Appointments' ]
      security:
        - BearerAuth: []
      summary: 'Get List of Appointments'
      responses:
        200:
          description: 'A list of appointments'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Appointment'
    post:
      tags: [ 'Appointments' ]
      security:
        - BearerAuth: []
      summary: 'Create a New Appointment'
      parameters:
        - in: 'body'
          name: 'appointment'
          required: true
          schema:
            $ref: '#/definitions/Appointment'
      responses:
        201:
          description: 'Appointment created'
        400:
          description: 'Invalid input'
  /v1/appointments/{appointmentId}:
    put:
      tags: [ 'Appointments' ]
      security:
        - BearerAuth: []
      summary: 'Update an Appointment'
      parameters:
        - in: 'path'
          name: 'appointmentId'
          required: true
          type: 'integer'
        - in: 'body'
          name: 'appointment'
          required: true
          schema:
            $ref: '#/definitions/Appointment'
      responses:
        200:
          description: 'Appointment updated'
        400:
          description: 'Invalid input'
        404:
          description: 'Appointment not found'
    delete:
      tags: [ 'Appointments' ]
      security:
        - BearerAuth: []
      summary: 'Delete an Appointment'
      parameters:
        - in: 'path'
          name: 'appointmentId'
          required: true
          type: 'integer'
      responses:
        200:
          description: 'Appointment deleted'
        404:
          description: 'Appointment not found'
  /v1/appointments/{appointmentId}/comments:
    get:
      tags: [ 'Comments' ]
      security:
        - BearerAuth: []
      summary: 'Get All Comments for an Appointment'
      parameters:
        - in: 'path'
          name: 'appointmentId'
          required: true
          type: 'integer'
      responses:
        200:
          description: 'An array of comments for the appointment'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/Comment'
    post:
      tags: [ 'Comments' ]
      security:
        - BearerAuth: []
      summary: 'Add a New Comment to an Appointment'
      parameters:
        - in: 'path'
          name: 'appointmentId'
          required: true
          type: 'integer'
        - in: 'body'
          name: 'comment'
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        201:
          description: 'Comment added'
        400:
          description: 'Invalid input'
  /v1/appointments/{appointmentId}/comments/{commentId}:
    put:
      tags: [ 'Comments' ]
      security:
        - BearerAuth: []
      summary: 'Update a Comment on an Appointment'
      parameters:
        - in: 'path'
          name: 'appointmentId'
          required: true
          type: 'integer'
        - in: 'path'
          name: 'commentId'
          required: true
          type: 'integer'
        - in: 'body'
          name: 'comment'
          required: true
          schema:
            $ref: '#/definitions/Comment'
      responses:
        200:
          description: 'Comment updated'
        400:
          description: 'Invalid input'
        404:
          description: 'Comment or appointment not found'
    delete:
      tags: [ 'Comments' ]
      security:
        - BearerAuth: []
      summary: 'Delete a Comment from an Appointment'
      parameters:
        - in: 'path'
          name: 'appointmentId'
          required: true
          type: 'integer'
        - in: 'path'
          name: 'commentId'
          required: true
          type: 'integer'
      responses:
        200:
          description: 'Comment deleted'
        404:
          description: 'Comment or appointment not found'
  /v1/appointments/{appointmentId}/history:
    get:
      tags: [ 'Update History' ]
      security:
        - BearerAuth: []
      summary: 'Get Update History for an Appointment'
      parameters:
        - in: 'path'
          name: 'appointmentId'
          required: true
          type: 'integer'
      responses:
        200:
          description: 'An array of update history logs for the appointment'
          schema:
            type: 'array'
            items:
              $ref: '#/definitions/ChangeLog'
    post:
      tags: [ 'Update History' ]
      security:
        - BearerAuth: []
      summary: 'Add an Entry to Update History of an Appointment'
      parameters:
        - in: 'path'
          name: 'appointmentId'
          required: true
          type: 'integer'
        - in: 'body'
          name: 'changeLog'
          required: true
          schema:
            $ref: '#/definitions/ChangeLog'
      responses:
        201:
          description: 'Change log entry added'
        400:
          description: 'Invalid input'

definitions:
  Appointment:
    type: 'object'
    properties:
      id:
        type: 'integer'
      topic:
        type: 'string'
      description:
        type: 'string'
      status:
        type: 'string'
      created_by:
        type: 'string'
      create_date:
        type: 'string'
      create_time:
        type: 'string'
  Comment:
    type: 'object'
    properties:
      id:
        type: 'integer'
      appointment_id:
        type: 'integer'
      comment_name:
        type: 'string'
      comment_details:
        type: 'string'
      create_date:
        type: 'string'
      create_by:
        type: 'string'
      update_date:
        type: 'string'
      update_by:
        type: 'string'
  ChangeLog:
    type: 'object'
    properties:
      id:
        type: 'integer'
      appointment_id:
        type: 'integer'
      topic:
        type: 'string'
      description:
        type: 'string'
      status:
        type: 'string'
      update_date:
        type: 'string'
      update_time:
        type: 'string'
