---
swagger: "2.0"
info:
  description: "API for managing recruitment appointments."
  version: "1.0.0"
  title: "Recruitment Appointment API"
basePath: "/api"
schemes:
- "http"
paths:
  /v1/appointments:
    get:
      tags:
      - "Appointments"
      summary: "Get List of Appointments"
      description: "Retrieve a list of all appointments."
      operationId: "v1AppointmentsGET"
      parameters: []
      responses:
        "200":
          description: "A list of appointments"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Appointment"
      x-swagger-router-controller: "Appointments"
  /v1/appointments/{appointmentId}:
    get:
      tags:
      - "Appointments"
      summary: "Get Appointment Details"
      description: "Retrieve details for a specific appointment by ID."
      operationId: "v1AppointmentsAppointmentIdGET"
      parameters:
      - name: "appointmentId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Appointment data"
          schema:
            $ref: "#/definitions/AppointmentDetails"
      x-swagger-router-controller: "Appointments"
    put:
      tags:
      - "Appointments"
      summary: "Edit Appointment"
      description: "Update details for a specific appointment by ID."
      operationId: "v1AppointmentsAppointmentIdPUT"
      parameters:
      - name: "appointmentId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "appointment"
        description: "Appointment object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Appointment"
      responses:
        "200":
          description: "Appointment updated successfully"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "Appointments"
  /v1/appointments/{appointmentId}/comments:
    get:
      tags:
      - "Comments"
      summary: "Get Appointment Comments"
      description: "Retrieve comments for a specific appointment."
      operationId: "v1AppointmentsAppointmentIdCommentsGET"
      parameters:
      - name: "appointmentId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "An array of comments for the appointment"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Comment"
      x-swagger-router-controller: "Comments"
  /appointments/{appointmentId}/comments/{commentId}:
    put:
      tags:
      - "Comments"
      summary: "Update an Existing Comment"
      description: "Update an existing comment by its ID on a specific appointment."
      operationId: "appointmentsAppointmentIdCommentsCommentIdPUT"
      parameters:
      - name: "appointmentId"
        in: "path"
        required: true
        type: "string"
      - name: "commentId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "comment"
        description: "Comment object that needs to be updated"
        required: true
        schema:
          $ref: "#/definitions/Comment"
      responses:
        "200":
          description: "Comment updated"
        "400":
          description: "Invalid input"
        "404":
          description: "Comment or appointment not found"
      x-swagger-router-controller: "Comments"
    delete:
      tags:
      - "Comments"
      summary: "Delete an Existing Comment"
      description: "Delete an existing comment by its ID from a specific appointment."
      operationId: "appointmentsAppointmentIdCommentsCommentIdDELETE"
      parameters:
      - name: "appointmentId"
        in: "path"
        required: true
        type: "string"
      - name: "commentId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "Comment deleted"
        "404":
          description: "Comment or appointment not found"
      x-swagger-router-controller: "Comments"
  /v1/appointments/{appointmentId}/history:
    get:
      tags:
      - "Appointments"
      summary: "Get Appointment Update History"
      description: "Retrieve the update history for a specific appointment."
      operationId: "v1AppointmentsAppointmentIdHistoryGET"
      parameters:
      - name: "appointmentId"
        in: "path"
        required: true
        type: "string"
      responses:
        "200":
          description: "An array of update history logs for the appointment"
          schema:
            type: "array"
            items:
              $ref: "#/definitions/ChangeLog"
      x-swagger-router-controller: "Appointments"
    post:
      tags:
      - "Appointments"
      summary: "Add Update History Entry"
      description: "Add a new entry to the update history for a specific appointment."
      operationId: "v1AppointmentsAppointmentIdHistoryPOST"
      parameters:
      - name: "appointmentId"
        in: "path"
        required: true
        type: "string"
      - in: "body"
        name: "changeLog"
        description: "Change log entry to add"
        required: true
        schema:
          $ref: "#/definitions/ChangeLog"
      responses:
        "200":
          description: "Change log entry added successfully"
        "400":
          description: "Invalid input"
      x-swagger-router-controller: "Appointments"
definitions:
  Appointment:
    type: "object"
    properties:
      id:
        type: "string"
      topic:
        type: "string"
      description:
        type: "string"
      status:
        type: "string"
      created_by:
        type: "string"
      create_date:
        type: "string"
      create_time:
        type: "string"
    example:
      create_time: "create_time"
      topic: "topic"
      description: "description"
      id: "id"
      create_date: "create_date"
      created_by: "created_by"
      status: "status"
  AppointmentDetails:
    type: "object"
    properties:
      appointment:
        $ref: "#/definitions/Appointment"
      comments:
        type: "array"
        items:
          $ref: "#/definitions/Comment"
      update_history:
        type: "array"
        items:
          $ref: "#/definitions/ChangeLog"
    example:
      comments:
      - create_by: "create_by"
        comment_name: "comment_name"
        comment_details: "comment_details"
        id: "id"
        create_date: "create_date"
        update_by: "update_by"
        update_date: "update_date"
      - create_by: "create_by"
        comment_name: "comment_name"
        comment_details: "comment_details"
        id: "id"
        create_date: "create_date"
        update_by: "update_by"
        update_date: "update_date"
      appointment:
        create_time: "create_time"
        topic: "topic"
        description: "description"
        id: "id"
        create_date: "create_date"
        created_by: "created_by"
        status: "status"
      update_history:
      - update_time: "update_time"
        topic: "topic"
        description: "description"
        id: "id"
        update_date: "update_date"
        status: "status"
      - update_time: "update_time"
        topic: "topic"
        description: "description"
        id: "id"
        update_date: "update_date"
        status: "status"
  Comment:
    type: "object"
    required:
    - "comment_details"
    - "comment_name"
    - "create_by"
    - "create_date"
    properties:
      id:
        type: "string"
      comment_name:
        type: "string"
      comment_details:
        type: "string"
      create_date:
        type: "string"
      create_by:
        type: "string"
      update_date:
        type: "string"
      update_by:
        type: "string"
    example:
      create_by: "create_by"
      comment_name: "comment_name"
      comment_details: "comment_details"
      id: "id"
      create_date: "create_date"
      update_by: "update_by"
      update_date: "update_date"
  ChangeLog:
    type: "object"
    required:
    - "description"
    - "status"
    - "topic"
    - "update_date"
    - "update_time"
    properties:
      id:
        type: "string"
      topic:
        type: "string"
      description:
        type: "string"
      status:
        type: "string"
      update_date:
        type: "string"
      update_time:
        type: "string"
    example:
      update_time: "update_time"
      topic: "topic"
      description: "description"
      id: "id"
      update_date: "update_date"
      status: "status"
